{"ast":null,"code":"import { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n/**\n * The {@link endOfWeek} function options.\n */\n\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a week\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\n\nexport function endOfWeek(date, options) {\n  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n\n  var defaultOptions = getDefaultOptions();\n  var weekStartsOn = (_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0;\n\n  var _date = toDate(date);\n\n  var day = _date.getDay();\n\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n\n  _date.setDate(_date.getDate() + diff);\n\n  _date.setHours(23, 59, 59, 999);\n\n  return _date;\n} // Fallback for modularized imports:\n\nexport default endOfWeek;","map":{"version":3,"names":["toDate","getDefaultOptions","endOfWeek","date","options","defaultOptions","weekStartsOn","locale","_date","day","getDay","diff","setDate","getDate","setHours"],"sources":["C:/Users/rdzly/Downloads/FinalProjectWEB102/client/node_modules/date-fns/endOfWeek.mjs"],"sourcesContent":["import { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link endOfWeek} function options.\n */\n\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a week\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nexport function endOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n\n  _date.setDate(_date.getDate() + diff);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfWeek;\n"],"mappings":"AAAA,SAASA,MAAT,QAAuB,cAAvB;AACA,SAASC,iBAAT,QAAkC,2BAAlC;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,OAAzB,EAAkC;EAAA;;EACvC,IAAMC,cAAc,GAAGJ,iBAAiB,EAAxC;EACA,IAAMK,YAAY,sDAChBF,OADgB,aAChBA,OADgB,uBAChBA,OAAO,CAAEE,YADO,yEAEhBF,OAFgB,aAEhBA,OAFgB,0CAEhBA,OAAO,CAAEG,MAFO,6EAEhB,gBAAiBH,OAFD,0DAEhB,sBAA0BE,YAFV,yCAGhBD,cAAc,CAACC,YAHC,kEAIhBD,cAAc,CAACE,MAJC,oFAIhB,sBAAuBH,OAJP,2DAIhB,uBAAgCE,YAJhB,uCAKhB,CALF;;EAOA,IAAME,KAAK,GAAGR,MAAM,CAACG,IAAD,CAApB;;EACA,IAAMM,GAAG,GAAGD,KAAK,CAACE,MAAN,EAAZ;;EACA,IAAMC,IAAI,GAAG,CAACF,GAAG,GAAGH,YAAN,GAAqB,CAAC,CAAtB,GAA0B,CAA3B,IAAgC,CAAhC,IAAqCG,GAAG,GAAGH,YAA3C,CAAb;;EAEAE,KAAK,CAACI,OAAN,CAAcJ,KAAK,CAACK,OAAN,KAAkBF,IAAhC;;EACAH,KAAK,CAACM,QAAN,CAAe,EAAf,EAAmB,EAAnB,EAAuB,EAAvB,EAA2B,GAA3B;;EACA,OAAON,KAAP;AACD,C,CAED;;AACA,eAAeN,SAAf"},"metadata":{},"sourceType":"module"}